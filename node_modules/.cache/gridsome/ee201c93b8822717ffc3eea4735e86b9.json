{"remainingRequest":"/Users/SinaKhodadad/Dropbox/5. Sargon/scratch_sargon/node_modules/babel-loader/lib/index.js??ref--1-1!/Users/SinaKhodadad/Dropbox/5. Sargon/scratch_sargon/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/SinaKhodadad/Dropbox/5. Sargon/scratch_sargon/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/SinaKhodadad/Dropbox/5. Sargon/scratch_sargon/src/components/HierarchyTree.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/SinaKhodadad/Dropbox/5. Sargon/scratch_sargon/src/components/HierarchyTree.vue","mtime":1628189219750},{"path":"/Users/SinaKhodadad/Dropbox/5. Sargon/scratch_sargon/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/SinaKhodadad/Dropbox/5. Sargon/scratch_sargon/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/SinaKhodadad/Dropbox/5. Sargon/scratch_sargon/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/SinaKhodadad/Dropbox/5. Sargon/scratch_sargon/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/SinaKhodadad/Dropbox/5. Sargon/scratch_sargon/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport HierarchyTree from '../components/HierarchyTree';\nexport default {\n  name: 'HierarchyTree',\n  props: {\n    tree: Object,\n    hierarchy: Array,\n    bgDark: true\n  },\n  components: {\n    HierarchyTree: HierarchyTree\n  },\n  data: function data() {\n    return {\n      expanded: false,\n      current: false\n    };\n  },\n  watch: {\n    hierarchy: function hierarchy() {\n      this.expanded = this.hierarchy.includes(this.tree.name);\n      this.current = _toConsumableArray(this.hierarchy).pop() == this.tree.name;\n    }\n  },\n  methods: {\n    getName: function getName(str) {\n      return str ? str.split('/').pop().split('#').pop().split('_').join(' ') : '';\n    }\n  },\n  created: function created() {\n    this.expanded = this.hierarchy.includes(this.tree.name);\n    this.current = _toConsumableArray(this.hierarchy).pop() == this.tree.name; // console.log(([...this.hierarchy].pop(),this.tree.name))\n  }\n};",{"version":3,"sources":["HierarchyTree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAA,aAAA,MAAA,6BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA,MADA;AAEA,IAAA,SAAA,EAAA,KAFA;AAGA,IAAA,MAAA,EAAA;AAHA,GAFA;AAOA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA;AADA,GAPA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA;AAIA,GAfA;AAgBA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA,qBAAA;AACA,WAAA,QAAA,GAAA,KAAA,SAAA,CAAA,QAAA,CAAA,KAAA,IAAA,CAAA,IAAA,CAAA;AACA,WAAA,OAAA,GAAA,mBAAA,KAAA,SAAA,EAAA,GAAA,MAAA,KAAA,IAAA,CAAA,IAAA;AACA;AAJA,GAhBA;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,mBACA,GADA,EACA;AACA,aAAA,GAAA,GAAA,GAAA,CAAA,KAAA,CAAA,GAAA,EAAA,GAAA,GAAA,KAAA,CAAA,GAAA,EAAA,GAAA,GAAA,KAAA,CAAA,GAAA,EAAA,IAAA,CAAA,GAAA,CAAA,GAAA,EAAA;AACA;AAHA,GAtBA;AA2BA,EAAA,OA3BA,qBA2BA;AACA,SAAA,QAAA,GAAA,KAAA,SAAA,CAAA,QAAA,CAAA,KAAA,IAAA,CAAA,IAAA,CAAA;AACA,SAAA,OAAA,GAAA,mBAAA,KAAA,SAAA,EAAA,GAAA,MAAA,KAAA,IAAA,CAAA,IAAA,CAFA,CAGA;AACA;AA/BA,CAAA","sourcesContent":["<template>\n    <div class=\"border-l w-full\" v-bind:class=\"current?'bg-gray-200':'bg-white'\">\n        <div v-if=\"tree.name\" class=\"flex text-black font-thin\">\n            <span @click.prevent=\"expanded=!expanded\" v-if=\"tree.children && tree.children.length\"\n                   class=\"text-normal px-2 cursor-pointer\">{{expanded ? '▾' : '▸'}}</span>\n            <span v-else class=\"type\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n\n            <div class=\"font-thin text-gray-700 hover:text-primary-700 text-left w-full\">{{getName(tree.name)}}</div>\n        </div>\n\n        <g-link v-if=\"expanded\" v-for=\"branch in tree.children\" :key=\"branch.name\" class=\"flex ml-6 border-t\" :to=\"branch.name\">\n            <hierarchy-tree :tree=\"branch\" :hierarchy=\"hierarchy\"></hierarchy-tree>\n        </g-link>\n    </div>\n</template>\n\n<static-query>\n    {\n    metadata{\n    pathPrefix\n    }\n    }\n</static-query>\n\n<script>\n    import HierarchyTree from '../components/HierarchyTree'\n\n    export default {\n        name: 'HierarchyTree',\n        props:{\n            tree: Object,\n            hierarchy: Array,\n            bgDark: true\n        },\n        components:{\n            HierarchyTree\n        },\n        data() {\n            return {\n                expanded: false,\n                current: false\n            }\n        },\n        watch:{\n            hierarchy: function () {\n                this.expanded = this.hierarchy.includes(this.tree.name);\n                this.current = ([...this.hierarchy].pop()==this.tree.name)\n            }\n        },\n        methods:{\n            getName(str){\n                return str ? str.split('/').pop().split('#').pop().split('_').join(' ') : ''\n            }\n        },\n        created() {\n            this.expanded = this.hierarchy.includes(this.tree.name);\n            this.current = ([...this.hierarchy].pop()==this.tree.name)\n            // console.log(([...this.hierarchy].pop(),this.tree.name))\n        }\n    }\n</script>\n\n\n"],"sourceRoot":"src/components"}]}